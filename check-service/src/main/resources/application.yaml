spring:
  application:
    name: service-check-v1
  profiles:
    active: local
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    locale: zh_CN
    default-property-inclusion: non_empty
    property-naming-strategy: UPPER_CAMEL_CASE
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
      WRITE_DATE_KEYS_AS_TIMESTAMPS: false
      WRITE_DATES_WITH_ZONE_ID: false
    deserialization:
      ADJUST_DATES_TO_CONTEXT_TIME_ZONE: false
  webflux:
    format:
      date: yyyy-MM-dd
      time: HH:mm:ss
      date-time: yyyy-MM-dd HH:mm:ss
  servlet:
    multipart:
      max-file-size: 1GB
      max-request-size: 1GB
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://${hfhk.auth.server}/oauth2/jwks
  data:
    mongodb:
      auto-index-creation: true
      field-naming-strategy: com.hfhk.cairo.mongo.data.mapping.model.UpperCamelCaseFieldNamingStrategy
      database: ${hfhk.mongo.database:hfhk-check}
      gridfs:
        database: ${hfhk.mongo.gridfs.database:hfhk-check}
        bucket: ${hfhk.mongo.gridfs.bucket:hfhk}
      authentication-database: ${hfhk.mongo.authentication-database:hfhk}
      host: ${hfhk.mongo.host:mongo}
      port: ${hfhk.mongo.port:27017}
      username: ${hfhk.mongo.username:hfhk}
      password: ${hfhk.mongo.password:Hfhk.1320.}
  cloud:
    consul:
      host: ${hfhk.consul.host:localhost}
      port: ${hfhk.consul.port:8500}
      discovery:
        prefer-ip-address: true
        health-check-interval: 5s
        instance-zone: ${hfhk.consul.discovery.instance-zone:hfhk}
        instance-group: ${hfhk.consul.discovery.instance-group:hfhk}
        tags:
          - v1

server:
  http2:
    enabled: true
  servlet:
    encoding:
      force: true
  port: ${hfhk.server.port:80}


feign:
  hystrix:
    enabled: true
  okhttp:
    enabled: true
  httpclient:
    connection-timeout: 60000
  compression:
    request:
      min-request-size: 204000
  client:
    default-to-properties: true
    config:
      client:
        default-to-properties: true
        config:
          default:
            logger-level: FULL

          serviceAuthV1-auth-basic-client:
            logger-level: FULL
            request-interceptors:
              - com.hfhk.cairo.feign.interceptor.BasicRequestInterceptor
          serviceAuthV1-user-clientCredentials-client:
            logger-level: FULL
            request-interceptors:
              - com.hfhk.cairo.feign.interceptor.ClientOAuth2RequestInterceptor
              -
          serviceSystemV1-fileRequest-client:
            logger-level: FULL
            request-interceptors:
              - com.hfhk.cairo.feign.interceptor.RequestOAuth2RequestInterceptor
          serviceSystemV1-file-clientCredentials-client:
            logger-level: FULL
            request-interceptors:
              - com.hfhk.cairo.feign.interceptor.ClientOAuth2RequestInterceptor
          serviceSystemV1-dictionary-clientCredentials-client:
            logger-level: FULL
            request-interceptors:
              - com.hfhk.cairo.feign.interceptor.ClientOAuth2RequestInterceptor


security:
  oauth2:
    client:
      id: ${random.value}
      client-id: ${hfhk.client.id:hfhk_check}
      client-secret: ${hfhk.client.secret:hfhk_check}
      grant-type: client_credentials
      access-token-uri: http://${hfhk.auth.server:auth-server}/oauth2/token


logging:
  level:
    root: info
    com.hfhk: info
